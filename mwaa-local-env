#!/bin/bash

export AIRFLOW_VERSION=2.4.2
PYTHON_VERSION=3.7
DOCKER_COMPOSE_PROJECT_NAME=aws-mwaa-local-runner-${AIRFLOW_VERSION//./-}

display_help() {
   # Display Help
   echo "======================================"
   echo "   MWAA Local Runner CLI"
   echo "======================================"
   echo "Syntax: mwaa-local-runner [command]"
   echo
   echo "---commands---"
   echo "help                   Print CLI help"
   echo "build-image            Build Image Locally"
   echo "reset-db               Reset local PostgresDB container."
   echo "start                  Start Airflow local environment. (LocalExecutor, Using postgres DB)"
   echo "stop                   Stop Airflow local environment. (LocalExecutor, Using postgres DB)"
   echo "down                   Delete Airflow local environment. (LocalExecutor, Using postgres DB)"
   echo "test-requirements      Install requirements on an ephemeral instance of the container."
   echo "package-requirements   Download requirements WHL files into plugins folder."
   echo "validate-prereqs       Validate pre-reqs installed (docker, docker compose, python3, pip3)"
   echo
}

validate_prereqs() {

   if docker -v >/dev/null 2>&1; then
      echo -e "'docker' is not installed or not runnable without sudo. \xE2\x9D\x8C"
   else
      echo -e "'docker' is installed. \xE2\x9C\x94"
   fi


   if docker compose version >/dev/null 2>&1; then
      echo -e "'docker compose' is not installed. \xE2\x9D\x8C"
   else
      echo -e "'docker compose' is installed. \xE2\x9C\x94"
   fi


   if python3 --version >/dev/null 2>&1; then
      echo -e "'python3' is not installed. \xE2\x9D\x8C"
   else
      echo -e "'python3' is installed \xE2\x9C\x94"
   fi


   if pip3 --version >/dev/null 2>&1; then
      echo -e "'pip3' is not installed. \xE2\x9D\x8C"
   else
      echo -e "'pip3' is installed. \xE2\x9C\x94"
   fi
}

build_image() {
   curl https://raw.githubusercontent.com/apache/airflow/constraints-${AIRFLOW_VERSION}/constraints-${PYTHON_VERSION}.txt -o ./docker/config/constraints.txt
   docker build --rm --compress -t amazon/mwaa-local:$AIRFLOW_VERSION ./docker
}

case "$1" in
validate-prereqs)
   validate_prereqs
   ;;
test-requirements)
   BUILT_IMAGE=$(docker images -q amazon/mwaa-local:$AIRFLOW_VERSION)
   if [[ -n "$BUILT_IMAGE" ]]; then
     echo "Container amazon/mwaa-local:$AIRFLOW_VERSION exists. Skipping build"
   else
     echo "Container amazon/mwaa-local:$AIRFLOW_VERSION not built. Building locally."
     build_image
   fi
   docker run -v $(pwd)/dags:/usr/local/airflow/dags -v $(pwd)/plugins:/usr/local/airflow/plugins -v $(pwd)/requirements:/usr/local/airflow/requirements -it amazon/mwaa-local:$AIRFLOW_VERSION test-requirements
   ;;
package-requirements)
   BUILT_IMAGE=$(docker images -q amazon/mwaa-local:$AIRFLOW_VERSION)
   if [[ -n "$BUILT_IMAGE" ]]; then
     echo "Container amazon/mwaa-local:$AIRFLOW_VERSION exists. Skipping build"
   else
     echo "Container amazon/mwaa-local:$AIRFLOW_VERSION not built. Building locally."
     build_image
   fi
   docker run -v $(pwd)/dags:/usr/local/airflow/dags -v $(pwd)/plugins:/usr/local/airflow/plugins -v $(pwd)/requirements:/usr/local/airflow/requirements -it amazon/mwaa-local:$AIRFLOW_VERSION package-requirements
   ;;
build-image)
   build_image
   ;;
reset-db)
   docker compose --detach -p $DOCKER_COMPOSE_PROJECT_NAME -f ./docker/docker-compose-resetdb.yml up --abort-on-container-exit
   ;;
start)
   docker compose -p $DOCKER_COMPOSE_PROJECT_NAME -f ./docker/docker-compose-local.yml up --detach
   ;;
stop)
   docker compose -p $DOCKER_COMPOSE_PROJECT_NAME -f ./docker/docker-compose-local.yml stop
   ;;
down)
   docker compose -p $DOCKER_COMPOSE_PROJECT_NAME -f ./docker/docker-compose-local.yml down
   ;;
help)
   display_help
   ;;
*)
   echo "No command specified, displaying help"
   display_help
   ;;
esac
